[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 rand_seed;
uniform float dith;
uniform float sep;

float rand(vec2 co){
    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}


void fragment() {
	int state = 100000;
	
	vec3 c = texture(TEXTURE, UV).rgb;
	
	vec3 color_hsv;
	{
		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
		float d = q.x - min(q.w, q.y);
		float e = 1.0e-10;
		color_hsv=vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
	}
	
	float a = 10.;
	vec2 h = color_hsv.xz;
	
	
	
	vec2 q = vec2(ivec2(h*sep + rand(UV+rand_seed)/dith ) )/(sep);
	vec2 d = h - q; 
	
	
	color_hsv.xz = q;
//	color_hsv.x = q;

	vec3 color_rgb;
	{
		c = color_hsv;
		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
		color_rgb=c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
	}
	
	COLOR.rgb = color_rgb;
	
	
}"

[resource]
shader = SubResource( 1 )
shader_param/rand_seed = Vector2( 0.001, 0.1 )
shader_param/dith = 3.0
shader_param/sep = 10.0
