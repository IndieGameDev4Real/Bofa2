[gd_scene load_steps=17 format=2]

[ext_resource path="res://scenes/levels/Level1.gd" type="Script" id=1]
[ext_resource path="res://scenes/objects/LevelSwitch/LevelSwitch.gd" type="Script" id=2]
[ext_resource path="res://assets/tiles/prox_outside.tres" type="TileSet" id=3]
[ext_resource path="res://scenes/objects/Bloomer/Bloomer.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/objects/CameraFollow.gd" type="Script" id=5]
[ext_resource path="res://assets/audio/music/rain.ogg" type="AudioStream" id=6]
[ext_resource path="res://assets/textures/light.png" type="Texture" id=7]
[ext_resource path="res://scenes/objects/Lightning.gd" type="Script" id=8]
[ext_resource path="res://scenes/objects/Slime/Slime.tscn" type="PackedScene" id=9]
[ext_resource path="res://assets/textures/tree.png" type="Texture" id=10]
[ext_resource path="res://scenes/objects/House/House.tscn" type="PackedScene" id=11]
[ext_resource path="res://assets/shaders/water_tile_anim.tres" type="Material" id=12]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 8.55429, 3.08788 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 11.1195, 3.94186 )

[sub_resource type="Shader" id=3]
code = "shader_type particles;
uniform vec3 direction;
uniform float spread;
uniform float flatness;
uniform float initial_linear_velocity;
uniform float initial_angle;
uniform float angular_velocity;
uniform float orbit_velocity;
uniform float linear_accel;
uniform float radial_accel;
uniform float tangent_accel;
uniform float damping;
uniform float scale;
uniform float hue_variation;
uniform float anim_speed;
uniform float anim_offset;
uniform float initial_linear_velocity_random;
uniform float initial_angle_random;
uniform float angular_velocity_random;
uniform float orbit_velocity_random;
uniform float linear_accel_random;
uniform float radial_accel_random;
uniform float tangent_accel_random;
uniform float damping_random;
uniform float scale_random;
uniform float hue_variation_random;
uniform float anim_speed_random;
uniform float anim_offset_random;
uniform float lifetime_randomness;
uniform vec3 emission_box_extents;
uniform vec4 color_value : hint_color;
uniform int trail_divisor;
uniform vec3 gravity;


float rand_from_seed(inout uint seed) {
	int k;
	int s = int(seed);
	if (s == 0)
	s = 305420679;
	k = s / 127773;
	s = 16807 * (s - k * 127773) - 2836 * k;
	if (s < 0)
		s += 2147483647;
	seed = uint(s);
	return float(seed % uint(65536)) / 65535.0;
}

float rand_from_seed_m1_p1(inout uint seed) {
	return rand_from_seed(seed) * 2.0 - 1.0;
}

uint hash(uint x) {
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = ((x >> uint(16)) ^ x) * uint(73244475);
	x = (x >> uint(16)) ^ x;
	return x;
}

void vertex() {
	uint base_number = NUMBER / uint(trail_divisor);
	uint alt_seed = hash(base_number + uint(1) + RANDOM_SEED);
	float angle_rand = rand_from_seed(alt_seed);
	float scale_rand = rand_from_seed(alt_seed);
	float hue_rot_rand = rand_from_seed(alt_seed);
	float anim_offset_rand = rand_from_seed(alt_seed);
	float pi = 3.14159;
	float degree_to_rad = pi / 180.0;

	bool restart = false;
	float tv = 0.0;
	if (CUSTOM.y > CUSTOM.w) {
		restart = true;
		tv = 1.0;
	}

	if (RESTART || restart) {
		float tex_linear_velocity = 0.0;
		float tex_angle = 0.0;
		float tex_anim_offset = 0.0;
		float spread_rad = spread * degree_to_rad;
		float angle1_rad = rand_from_seed_m1_p1(alt_seed) * spread_rad;
		angle1_rad += direction.x != 0.0 ? atan(direction.y, direction.x) : sign(direction.y) * (pi / 2.0);
		vec3 rot = vec3(cos(angle1_rad), sin(angle1_rad), 0.0);
		VELOCITY = rot * initial_linear_velocity * mix(1.0, rand_from_seed(alt_seed), initial_linear_velocity_random);
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.y = 0.0;
		CUSTOM.w = (1.0 - lifetime_randomness * rand_from_seed(alt_seed));
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random);
		TRANSFORM[3].xyz = vec3(rand_from_seed(alt_seed) * 2.0 - 1.0, rand_from_seed(alt_seed) * 2.0 - 1.0, rand_from_seed(alt_seed) * 2.0 - 1.0) * emission_box_extents;
		VELOCITY = (EMISSION_TRANSFORM * vec4(VELOCITY, 0.0)).xyz;
		TRANSFORM = EMISSION_TRANSFORM * TRANSFORM;
		VELOCITY.z = 0.0;
		TRANSFORM[3].z = 0.0;
	} else {
		CUSTOM.y += DELTA / LIFETIME;
		tv = CUSTOM.y / CUSTOM.w;
		float tex_linear_velocity = 0.0;
		float tex_orbit_velocity = 0.0;
		float tex_angular_velocity = 0.0;
		float tex_linear_accel = 0.0;
		float tex_radial_accel = 0.0;
		float tex_tangent_accel = 0.0;
		float tex_damping = 0.0;
		float tex_angle = 0.0;
		float tex_anim_speed = 0.0;
		float tex_anim_offset = 0.0;
		vec3 force = gravity;
		vec3 pos = TRANSFORM[3].xyz;
		pos.z = 0.0;
		// apply linear acceleration
		force += length(VELOCITY) > 0.0 ? normalize(VELOCITY) * (linear_accel + tex_linear_accel) * mix(1.0, rand_from_seed(alt_seed), linear_accel_random) : vec3(0.0);
		// apply radial acceleration
		vec3 org = EMISSION_TRANSFORM[3].xyz;
		vec3 diff = pos - org;
		force += length(diff) > 0.0 ? normalize(diff) * (radial_accel + tex_radial_accel) * mix(1.0, rand_from_seed(alt_seed), radial_accel_random) : vec3(0.0);
		// apply tangential acceleration;
		force += length(diff.yx) > 0.0 ? vec3(normalize(diff.yx * vec2(-1.0, 1.0)), 0.0) * ((tangent_accel + tex_tangent_accel) * mix(1.0, rand_from_seed(alt_seed), tangent_accel_random)) : vec3(0.0);
		// apply attractor forces
		VELOCITY += force * DELTA;
		// orbit velocity
		float orbit_amount = (orbit_velocity + tex_orbit_velocity) * mix(1.0, rand_from_seed(alt_seed), orbit_velocity_random);
		if (orbit_amount != 0.0) {
		     float ang = orbit_amount * DELTA * pi * 2.0;
		     mat2 rot = mat2(vec2(cos(ang), -sin(ang)), vec2(sin(ang), cos(ang)));
		     TRANSFORM[3].xy -= diff.xy;
		     TRANSFORM[3].xy += rot * diff.xy;
		}
		if (damping + tex_damping > 0.0) {
			float v = length(VELOCITY);
			float damp = (damping + tex_damping) * mix(1.0, rand_from_seed(alt_seed), damping_random);
			v -= damp * DELTA;
			if (v < 0.0) {
				VELOCITY = vec3(0.0);
			} else {
				VELOCITY = normalize(VELOCITY) * v;
			}
		}
		float base_angle = (initial_angle + tex_angle) * mix(1.0, angle_rand, initial_angle_random);
		base_angle += CUSTOM.y * LIFETIME * (angular_velocity + tex_angular_velocity) * mix(1.0, rand_from_seed(alt_seed) * 2.0 - 1.0, angular_velocity_random);
		CUSTOM.x = base_angle * degree_to_rad;
		CUSTOM.z = (anim_offset + tex_anim_offset) * mix(1.0, anim_offset_rand, anim_offset_random) + CUSTOM.y * (anim_speed + tex_anim_speed) * mix(1.0, rand_from_seed(alt_seed), anim_speed_random);
	}
	float tex_scale = 1.0;
	float tex_hue_variation = 0.0;
	float hue_rot_angle = (hue_variation + tex_hue_variation) * pi * 2.0 * mix(1.0, hue_rot_rand * 2.0 - 1.0, hue_variation_random);
	float hue_rot_c = cos(hue_rot_angle);
	float hue_rot_s = sin(hue_rot_angle);
	mat4 hue_rot_mat = mat4(vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.299, 0.587, 0.114, 0.0),
			vec4(0.000, 0.000, 0.000, 1.0)) +
		mat4(vec4(0.701, -0.587, -0.114, 0.0),
			vec4(-0.299, 0.413, -0.114, 0.0),
			vec4(-0.300, -0.588, 0.886, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_c +
		mat4(vec4(0.168, 0.330, -0.497, 0.0),
			vec4(-0.328, 0.035,  0.292, 0.0),
			vec4(1.250, -1.050, -0.203, 0.0),
			vec4(0.000, 0.000, 0.000, 0.0)) * hue_rot_s;
	COLOR = hue_rot_mat * color_value;

	TRANSFORM[0] = vec4(cos(CUSTOM.x), -sin(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[1] = vec4(sin(CUSTOM.x), cos(CUSTOM.x), 0.0, 0.0);
	TRANSFORM[2] = vec4(0.0, 0.0, 1.0, 0.0);
	float base_scale = tex_scale * mix(scale, 1.0, scale_random * scale_rand);
	if (base_scale < 0.000001) {
		base_scale = 0.000001;
	}
	TRANSFORM[0].xyz *= base_scale;
	TRANSFORM[1].xyz *= base_scale;
	TRANSFORM[2].xyz *= base_scale;
	VELOCITY.z = 0.0;
	TRANSFORM[3].z = 0.0;
	if (CUSTOM.y > CUSTOM.w) {		ACTIVE = false;
	}
}

"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/direction = Vector3( 0, 1, 0 )
shader_param/spread = 5.0
shader_param/flatness = 0.0
shader_param/initial_linear_velocity = 250.0
shader_param/initial_angle = 0.0
shader_param/angular_velocity = 0.0
shader_param/orbit_velocity = 0.0
shader_param/linear_accel = 0.0
shader_param/radial_accel = 0.0
shader_param/tangent_accel = 0.0
shader_param/damping = 0.0
shader_param/scale = 3.0
shader_param/hue_variation = 0.0
shader_param/anim_speed = 0.0
shader_param/anim_offset = 0.0
shader_param/initial_linear_velocity_random = 0.0
shader_param/initial_angle_random = 0.0
shader_param/angular_velocity_random = 0.0
shader_param/orbit_velocity_random = 0.0
shader_param/linear_accel_random = 0.0
shader_param/radial_accel_random = 0.0
shader_param/tangent_accel_random = 0.0
shader_param/damping_random = 0.0
shader_param/scale_random = 0.0
shader_param/hue_variation_random = 0.0
shader_param/anim_speed_random = 0.0
shader_param/anim_offset_random = 0.0
shader_param/lifetime_randomness = 0.0
shader_param/emission_box_extents = Vector3( 425, 0, 1 )
shader_param/color_value = Color( 0, 0.0196078, 0.172549, 0.6 )
shader_param/trail_divisor = 5
shader_param/gravity = Vector3( 0, 10, 0 )

[node name="Level" type="Node2D"]
script = ExtResource( 1 )
__meta__ = {
"_edit_horizontal_guides_": [  ]
}

[node name="Camera" type="Camera2D" parent="." groups=[
"main_camera",
]]
current = true
limit_left = 0
limit_top = 0
script = ExtResource( 5 )
speed_scale = 0.05
min_speed = Vector2( 1, 1 )

[node name="top" type="Position2D" parent="Camera"]
position = Vector2( 0, -77.3624 )

[node name="bottom" type="Position2D" parent="Camera"]
position = Vector2( 1103.26, 813.988 )

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 6 )
pitch_scale = 0.9
autoplay = true

[node name="BRUH" type="TileMap" parent="."]
material = ExtResource( 12 )
tile_set = ExtResource( 3 )
cell_size = Vector2( 32, 32 )
cell_y_sort = true
collision_layer = 2
collision_mask = 2
format = 1
tile_data = PoolIntArray( -196609, 0, 131072, -262144, 0, 131073, -262143, 0, 131073, -262142, 0, 131073, -262141, 0, 131073, -262140, 0, 131073, -262139, 0, 131073, -262138, 0, 131073, -262137, 0, 131073, -262136, 0, 131073, -262135, 0, 131073, -262134, 0, 131073, -262133, 0, 131073, -262132, 0, 131073, -262131, 0, 131073, -262130, 0, 131073, -262129, 0, 131073, -262128, 0, 131073, -262127, 0, 131073, -262126, 0, 131073, -262125, 0, 131073, -262124, 0, 786433, -262123, 0, 327682, -262122, 0, 917504, -262121, 0, 131073, -262120, 0, 131073, -262119, 0, 131073, -262118, 0, 131073, -262117, 0, 131073, -262116, 0, 131073, -262115, 0, 131073, -262114, 0, 131073, -262113, 0, 131073, -262112, 0, 131073, -262111, 0, 131073, -262110, 0, 131073, -262109, 0, 131074, -131073, 0, 196608, -196608, 0, 196609, -196607, 0, 196609, -196606, 0, 196609, -196605, 0, 196609, -196604, 0, 196609, -196603, 0, 196609, -196602, 0, 196609, -196601, 0, 196609, -196600, 0, 196609, -196599, 0, 196609, -196598, 0, 196609, -196597, 0, 196609, -196596, 0, 196609, -196595, 0, 196609, -196594, 0, 196609, -196593, 0, 196609, -196592, 0, 196609, -196591, 0, 196609, -196590, 0, 196609, -196589, 0, 196609, -196588, 0, 196610, -196587, 3, 2, -196586, 0, 196608, -196585, 0, 196609, -196584, 0, 196609, -196583, 0, 196609, -196582, 0, 196609, -196581, 0, 196609, -196580, 0, 196609, -196579, 0, 196609, -196578, 0, 196609, -196577, 0, 196609, -196576, 0, 196609, -196575, 0, 196609, -196574, 0, 196609, -196573, 0, 196610, -65537, 0, 196608, -131072, 0, 196609, -131071, 0, 196609, -131070, 0, 196609, -131069, 0, 196609, -131068, 0, 196609, -131067, 0, 196609, -131066, 0, 196609, -131065, 0, 196609, -131064, 0, 196609, -131063, 0, 196609, -131062, 0, 196609, -131061, 0, 196609, -131060, 0, 196609, -131059, 0, 196609, -131058, 0, 196609, -131057, 0, 196609, -131056, 0, 196609, -131055, 0, 196609, -131054, 0, 196609, -131053, 0, 196609, -131052, 0, 196610, -131051, 3, 196610, -131050, 0, 196608, -131049, 0, 196609, -131048, 0, 196609, -131047, 0, 196609, -131046, 0, 196609, -131045, 0, 196609, -131044, 0, 196609, -131043, 0, 196609, -131042, 0, 196609, -131041, 0, 196609, -131040, 0, 196609, -131039, 0, 196609, -131038, 0, 196609, -131037, 0, 196610, -1, 0, 196608, -65536, 0, 196609, -65535, 0, 196609, -65534, 0, 196609, -65533, 0, 196609, -65532, 0, 196609, -65531, 0, 196609, -65530, 0, 196609, -65529, 0, 196609, -65528, 0, 196609, -65527, 0, 196609, -65526, 0, 196609, -65525, 0, 196609, -65524, 0, 196609, -65523, 0, 196609, -65522, 0, 196609, -65521, 0, 196609, -65520, 0, 196609, -65519, 0, 196609, -65518, 0, 327680, -65517, 0, 262145, -65516, 0, 262146, -65515, 3, 65538, -65514, 0, 262144, -65513, 0, 262145, -65512, 0, 262145, -65511, 0, 327681, -65510, 0, 196609, -65509, 0, 196609, -65508, 0, 196609, -65507, 0, 196609, -65506, 0, 196609, -65505, 0, 196609, -65504, 0, 196609, -65503, 0, 196609, -65502, 0, 196609, -65501, 0, 196610, 65535, 0, 196608, 0, 0, 196609, 1, 0, 196609, 2, 0, 196609, 3, 0, 196609, 4, 0, 196609, 5, 0, 196609, 6, 0, 196609, 7, 0, 196609, 8, 0, 196609, 9, 0, 196609, 10, 0, 196609, 11, 0, 196609, 12, 0, 196609, 13, 0, 196609, 14, 0, 196609, 15, 0, 196609, 16, 0, 196609, 17, 0, 327680, 18, 0, 262146, 19, 3, 196611, 20, 3, 589825, 21, 3, 524288, 22, 3, 589825, 23, 3, 589825, 24, 3, 196612, 25, 0, 196608, 26, 0, 196609, 27, 0, 196609, 28, 0, 196609, 29, 0, 196609, 30, 0, 196609, 31, 0, 196609, 32, 0, 196609, 33, 0, 196609, 34, 0, 196609, 35, 0, 196610, 131071, 0, 196608, 65536, 0, 196609, 65537, 0, 196609, 65538, 0, 196609, 65539, 0, 196609, 65540, 0, 196609, 65541, 0, 196609, 65542, 0, 196609, 65543, 0, 196609, 65544, 0, 196609, 65545, 0, 196609, 65546, 0, 196609, 65547, 0, 196609, 65548, 0, 196609, 65549, 0, 196609, 65550, 0, 196609, 65551, 0, 327680, 65552, 0, 262145, 65553, 0, 262146, 65554, 3, 196611, 65555, 3, 524292, 65556, 3, 393218, 65557, 3, 393218, 65558, 3, 393218, 65559, 3, 393218, 65560, 3, 655361, 65561, 0, 262144, 65562, 0, 327681, 65563, 0, 196609, 65564, 0, 196609, 65565, 0, 196609, 65566, 0, 196609, 65567, 0, 196609, 65568, 0, 196609, 65569, 0, 196609, 65570, 0, 196609, 65571, 0, 196610, 196607, 0, 196608, 131072, 0, 196609, 131073, 1610612736, 196609, 131074, 0, 196609, 131075, 0, 196609, 131076, 0, 196609, 131077, 0, 196609, 131078, 0, 196609, 131079, 0, 196609, 131080, 0, 196609, 131081, 0, 196609, 131082, 0, 196609, 131083, 0, 196609, 131084, 0, 196609, 131085, 0, 196609, 131086, 0, 196609, 131087, 0, 196610, 131088, 3, 196611, 131089, 3, 589825, 131090, 3, 524292, 131091, 3, 393218, 131092, 3, 393218, 131093, 3, 393218, 131094, 3, 393218, 131095, 3, 393218, 131096, 3, 524291, 131097, 3, 196612, 131098, 0, 196608, 131099, 0, 196609, 131100, 0, 196609, 131101, 0, 196609, 131102, 0, 196609, 131103, 0, 196609, 131104, 0, 196609, 131105, 0, 196609, 131106, 0, 196609, 131107, 0, 196610, 262143, 0, 196608, 196608, 0, 196609, 196609, 0, 196609, 196610, 0, 196609, 196611, 0, 196609, 196612, 0, 196609, 196613, 0, 196609, 196614, 0, 196609, 196615, 0, 196609, 196616, 0, 196609, 196617, 0, 327680, 196618, 0, 262145, 196619, 0, 262145, 196620, 0, 262145, 196621, 0, 262145, 196622, 0, 262145, 196623, 0, 262146, 196624, 3, 589824, 196625, 3, 393218, 196626, 3, 393218, 196627, 3, 393218, 196628, 3, 393218, 196629, 3, 393218, 196630, 3, 393218, 196631, 3, 393218, 196632, 3, 393218, 196633, 3, 655361, 196634, 0, 196608, 196635, 0, 196609, 196636, 0, 196609, 196637, 0, 196609, 196638, 0, 196609, 196639, 0, 196609, 196640, 0, 196609, 196641, 0, 196609, 196642, 0, 196609, 196643, 0, 196610, 327679, 0, 196608, 262144, 0, 196609, 262145, 0, 196609, 262146, 0, 196609, 262147, 0, 196609, 262148, 0, 196609, 262149, 0, 327680, 262150, 0, 262145, 262151, 0, 262145, 262152, 0, 262145, 262153, 0, 262146, 262154, 3, 196611, 262155, 3, 589825, 262156, 3, 589825, 262157, 3, 589825, 262158, 3, 589825, 262159, 3, 589825, 262160, 3, 524292, 262161, 3, 393218, 262162, 3, 393218, 262163, 3, 393218, 262164, 3, 393218, 262165, 3, 393218, 262166, 3, 393218, 262167, 3, 393218, 262168, 3, 393218, 262169, 3, 655361, 262170, 0, 262144, 262171, 0, 327681, 262172, 0, 196609, 262173, 0, 196609, 262174, 0, 196609, 262175, 0, 196609, 262176, 0, 196609, 262177, 0, 196609, 262178, 0, 196609, 262179, 0, 196610, 393215, 0, 196608, 327680, 0, 196609, 327681, 0, 196609, 327682, 0, 196609, 327683, 0, 196609, 327684, 0, 327680, 327685, 0, 262146, 327686, 3, 196611, 327687, 3, 589825, 327688, 3, 589825, 327689, 3, 589825, 327690, 3, 524292, 327691, 3, 393218, 327692, 3, 393218, 327693, 3, 393218, 327694, 3, 393218, 327695, 3, 393218, 327696, 3, 393218, 327697, 3, 393218, 327698, 3, 393218, 327699, 3, 393218, 327700, 3, 393218, 327701, 3, 393218, 327702, 3, 393218, 327703, 3, 393218, 327704, 3, 393218, 327705, 3, 524291, 327706, 3, 196612, 327707, 0, 196608, 327708, 0, 196609, 327709, 0, 196609, 327710, 0, 196609, 327711, 0, 196609, 327712, 0, 196609, 327713, 0, 196609, 327714, 0, 196609, 327715, 0, 196610, 458751, 0, 196608, 393216, 0, 196609, 393217, 0, 196609, 393218, 0, 196609, 393219, 0, 327680, 393220, 0, 262146, 393221, 3, 196611, 393222, 3, 524292, 393223, 3, 393218, 393224, 3, 393218, 393225, 3, 393218, 393226, 3, 393218, 393227, 3, 393218, 393228, 3, 393218, 393229, 3, 393218, 393230, 3, 393218, 393231, 3, 393218, 393232, 3, 393218, 393233, 3, 393218, 393234, 3, 393218, 393235, 3, 393218, 393236, 3, 393218, 393237, 3, 393218, 393238, 3, 393218, 393239, 3, 393218, 393240, 3, 393218, 393241, 3, 393218, 393242, 3, 655361, 393243, 0, 196608, 393244, 0, 196609, 393245, 0, 196609, 393246, 0, 196609, 393247, 0, 196609, 393248, 0, 196609, 393249, 0, 196609, 393250, 0, 196609, 393251, 0, 196610, 524287, 0, 196608, 458752, 0, 196609, 458753, 0, 327680, 458754, 0, 262145, 458755, 0, 262146, 458756, 3, 196611, 458757, 3, 524292, 458758, 3, 393218, 458759, 3, 393218, 458760, 3, 393218, 458761, 3, 393218, 458762, 3, 393218, 458763, 3, 393218, 458764, 3, 393218, 458765, 3, 393218, 458766, 3, 393218, 458767, 3, 393218, 458768, 3, 393218, 458769, 3, 393218, 458770, 3, 393218, 458771, 3, 393218, 458772, 3, 393218, 458773, 3, 393218, 458774, 3, 393218, 458775, 3, 393218, 458776, 3, 393218, 458777, 3, 393218, 458778, 3, 655361, 458779, 0, 196608, 458780, 0, 196609, 458781, 0, 196609, 458782, 0, 196609, 458783, 0, 196609, 458784, 0, 196609, 458785, 0, 196609, 458786, 0, 196609, 458787, 0, 196610, 589823, 0, 196608, 524288, 0, 196609, 524289, 0, 196610, 524290, 3, 196611, 524291, 3, 589825, 524292, 3, 524292, 524293, 3, 393218, 524294, 3, 393218, 524295, 3, 393218, 524296, 3, 393218, 524297, 3, 393218, 524298, 3, 393218, 524299, 3, 393218, 524300, 3, 393218, 524301, 3, 393218, 524302, 3, 393218, 524303, 3, 393218, 524304, 3, 393218, 524305, 3, 393218, 524306, 3, 393218, 524307, 3, 393218, 524308, 3, 393218, 524309, 3, 393218, 524310, 3, 393218, 524311, 3, 393218, 524312, 3, 393218, 524313, 3, 393218, 524314, 3, 655361, 524315, 0, 196608, 524316, 0, 196609, 524317, 0, 196609, 524318, 0, 196609, 524319, 0, 196609, 524320, 0, 196609, 524321, 0, 196609, 524322, 0, 196609, 524323, 0, 196610, 655359, 0, 196608, 589824, 0, 196609, 589825, 0, 196610, 589826, 3, 589824, 589827, 3, 393218, 589828, 3, 393218, 589829, 3, 458755, 589830, 3, 655360, 589831, 3, 655360, 589832, 3, 458756, 589833, 3, 393218, 589834, 3, 393218, 589835, 3, 393218, 589836, 3, 393218, 589837, 3, 393218, 589838, 3, 393218, 589839, 3, 393218, 589840, 3, 393218, 589841, 3, 393218, 589842, 3, 393218, 589843, 3, 393218, 589844, 3, 393218, 589845, 3, 393218, 589846, 3, 393218, 589847, 3, 393218, 589848, 3, 393218, 589849, 3, 393218, 589850, 3, 655361, 589851, 0, 196608, 589852, 0, 196609, 589853, 0, 196609, 589854, 0, 196609, 589855, 0, 196609, 589856, 0, 196609, 589857, 0, 196609, 589858, 0, 196609, 589859, 0, 196610, 720895, 0, 196608, 655360, 0, 327680, 655361, 0, 262146, 655362, 3, 589824, 655363, 3, 458755, 655364, 3, 655360, 655365, 3, 262148, 655366, 0, 131072, 655367, 0, 131074, 655368, 3, 262147, 655369, 3, 655360, 655370, 3, 458756, 655371, 3, 393218, 655372, 3, 393218, 655373, 3, 393218, 655374, 3, 393218, 655375, 3, 393218, 655376, 3, 393218, 655377, 3, 393218, 655378, 3, 393218, 655379, 3, 393218, 655380, 3, 393218, 655381, 3, 393218, 655382, 3, 393218, 655383, 3, 393218, 655384, 3, 393218, 655385, 3, 393218, 655386, 3, 655361, 655387, 0, 196608, 655388, 0, 196609, 655389, 0, 196609, 655390, 0, 196609, 655391, 0, 196609, 655392, 0, 196609, 655393, 0, 196609, 655394, 0, 196609, 655395, 0, 196610, 786431, 0, 196608, 720896, 0, 196610, 720897, 3, 196611, 720898, 3, 524292, 720899, 3, 655361, 720900, 0, 131072, 720901, 0, 131073, 720902, 0, 393217, 720903, 0, 393216, 720904, 0, 131073, 720905, 0, 131074, 720906, 3, 589824, 720907, 3, 393218, 720908, 3, 393218, 720909, 3, 393218, 720910, 3, 393218, 720911, 3, 393218, 720912, 3, 393218, 720913, 3, 393218, 720914, 3, 393218, 720915, 3, 393218, 720916, 3, 393218, 720917, 3, 393218, 720918, 3, 393218, 720919, 3, 393218, 720920, 3, 393218, 720921, 3, 458755, 720922, 3, 262148, 720923, 0, 196608, 720924, 0, 196609, 720925, 0, 196609, 720926, 0, 196609, 720927, 0, 196609, 720928, 0, 196609, 720929, 0, 196609, 720930, 0, 196609, 720931, 0, 196610, 851967, 0, 196608, 786432, 0, 196610, 786433, 3, 589824, 786434, 3, 393218, 786435, 3, 655361, 786436, 0, 262144, 786437, 0, 262145, 786438, 0, 327681, 786439, 0, 196609, 786440, 0, 327680, 786441, 0, 262146, 786442, 3, 589824, 786443, 3, 393218, 786444, 3, 393218, 786445, 3, 393218, 786446, 3, 393218, 786447, 3, 393218, 786448, 3, 393218, 786449, 3, 393218, 786450, 3, 393218, 786451, 3, 393218, 786452, 3, 393218, 786453, 3, 393218, 786454, 3, 393218, 786455, 3, 393218, 786456, 3, 393218, 786457, 3, 655361, 786458, 0, 131072, 786459, 0, 393217, 786460, 0, 196609, 786461, 0, 196609, 786462, 0, 196609, 786463, 0, 196609, 786464, 0, 196609, 786465, 0, 196609, 786466, 0, 196609, 786467, 0, 196610, 917503, 0, 196608, 851968, 0, 196610, 851969, 3, 262147, 851970, 3, 458756, 851971, 3, 524291, 851972, 3, 589825, 851973, 3, 196612, 851974, 0, 262144, 851975, 0, 262145, 851976, 0, 262146, 851977, 3, 196611, 851978, 3, 524292, 851979, 3, 393218, 851980, 3, 393218, 851981, 3, 393218, 851982, 3, 393218, 851983, 3, 393218, 851984, 3, 393218, 851985, 3, 393218, 851986, 3, 393218, 851987, 3, 393218, 851988, 3, 393218, 851989, 3, 393218, 851990, 3, 393218, 851991, 3, 393218, 851992, 3, 458755, 851993, 3, 262148, 851994, 0, 196608, 851995, 0, 196609, 851996, 0, 196609, 851997, 0, 196609, 851998, 0, 196609, 851999, 0, 196609, 852000, 0, 196609, 852001, 0, 196609, 852002, 0, 196609, 852003, 0, 196610, 983039, 0, 196608, 917504, 0, 393216, 917505, 0, 131074, 917506, 3, 262147, 917507, 3, 458756, 917508, 3, 393218, 917509, 3, 524291, 917510, 3, 589825, 917511, 3, 589825, 917512, 3, 589825, 917513, 3, 524292, 917514, 3, 393218, 917515, 3, 393218, 917516, 3, 393218, 917517, 3, 393218, 917518, 3, 393218, 917519, 3, 393218, 917520, 3, 393218, 917521, 3, 393218, 917522, 3, 393218, 917523, 3, 393218, 917524, 3, 393218, 917525, 3, 458755, 917526, 3, 655360, 917527, 3, 655360, 917528, 3, 262148, 917529, 0, 131072, 917530, 0, 393217, 917531, 0, 196609, 917532, 0, 196609, 917533, 0, 196609, 917534, 0, 196609, 917535, 0, 196609, 917536, 0, 196609, 917537, 0, 196609, 917538, 0, 196609, 917539, 0, 196610, 1048575, 0, 196608, 983040, 0, 196609, 983041, 0, 393216, 983042, 0, 131074, 983043, 3, 262147, 983044, 3, 655360, 983045, 3, 655360, 983046, 3, 655360, 983047, 3, 655360, 983048, 3, 655360, 983049, 3, 655360, 983050, 3, 655360, 983051, 3, 655360, 983052, 3, 655360, 983053, 3, 655360, 983054, 3, 655360, 983055, 3, 458756, 983056, 3, 393218, 983057, 3, 393218, 983058, 3, 458755, 983059, 3, 655360, 983060, 3, 655360, 983061, 3, 262148, 983062, 0, 131072, 983063, 0, 131073, 983064, 0, 131073, 983065, 0, 393217, 983066, 0, 196609, 983067, 0, 196609, 983068, 0, 196609, 983069, 0, 196609, 983070, 0, 196609, 983071, 0, 196609, 983072, 0, 196609, 983073, 0, 196609, 983074, 0, 196609, 983075, 0, 196610, 1114111, 0, 196608, 1048576, 0, 196609, 1048577, 0, 196609, 1048578, 0, 393216, 1048579, 0, 131073, 1048580, 0, 131073, 1048581, 0, 131073, 1048582, 0, 131073, 1048583, 0, 131073, 1048584, 0, 131073, 1048585, 0, 131073, 1048586, 0, 131073, 1048587, 0, 131073, 1048588, 0, 131073, 1048589, 0, 131073, 1048590, 0, 131074, 1048591, 3, 262147, 1048592, 3, 655360, 1048593, 3, 655360, 1048594, 3, 262148, 1048595, 0, 131072, 1048596, 0, 131073, 1048597, 0, 131073, 1048598, 0, 393217, 1048599, 0, 196609, 1048600, 0, 196609, 1048601, 0, 196609, 1048602, 0, 196609, 1048603, 0, 196609, 1048604, 0, 196609, 1048605, 0, 196609, 1048606, 0, 196609, 1048607, 0, 196609, 1048608, 0, 196609, 1048609, 0, 196609, 1048610, 0, 196609, 1048611, 0, 196610, 1179647, 0, 196608, 1114112, 0, 196609, 1114113, 0, 196609, 1114114, 0, 196609, 1114115, 0, 196609, 1114116, 0, 196609, 1114117, 0, 196609, 1114118, 0, 196609, 1114119, 0, 196609, 1114120, 0, 196609, 1114121, 0, 196609, 1114122, 0, 196609, 1114123, 0, 196609, 1114124, 0, 196609, 1114125, 0, 196609, 1114126, 0, 393216, 1114127, 0, 131073, 1114128, 0, 131073, 1114129, 0, 131073, 1114130, 0, 131073, 1114131, 0, 393217, 1114132, 0, 196609, 1114133, 0, 196609, 1114134, 0, 196609, 1114135, 0, 196609, 1114136, 0, 196609, 1114137, 0, 196609, 1114138, 0, 196609, 1114139, 0, 196609, 1114140, 0, 196609, 1114141, 0, 196609, 1114142, 0, 196609, 1114143, 0, 196609, 1114144, 0, 196609, 1114145, 0, 196609, 1114146, 0, 196609, 1114147, 0, 196610, 1245183, 0, 196608, 1179648, 0, 196609, 1179649, 0, 196609, 1179650, 0, 196609, 1179651, 0, 196609, 1179652, 0, 196609, 1179653, 0, 196609, 1179654, 0, 196609, 1179655, 0, 196609, 1179656, 0, 196609, 1179657, 0, 196609, 1179658, 0, 196609, 1179659, 0, 196609, 1179660, 0, 196609, 1179661, 0, 196609, 1179662, 0, 196609, 1179663, 0, 196609, 1179664, 0, 196609, 1179665, 0, 196609, 1179666, 0, 196609, 1179667, 0, 196609, 1179668, 0, 196609, 1179669, 0, 196609, 1179670, 0, 196609, 1179671, 0, 196609, 1179672, 0, 196609, 1179673, 0, 196609, 1179674, 0, 196609, 1179675, 0, 196609, 1179676, 0, 196609, 1179677, 0, 196609, 1179678, 0, 196609, 1179679, 0, 196609, 1179680, 0, 196609, 1179681, 0, 196609, 1179682, 0, 196609, 1179683, 0, 196610, 1310719, 0, 196608, 1245184, 0, 196609, 1245185, 0, 196609, 1245186, 0, 196609, 1245187, 0, 196609, 1245188, 0, 196609, 1245189, 0, 196609, 1245190, 0, 196609, 1245191, 0, 196609, 1245192, 0, 196609, 1245193, 0, 196609, 1245194, 0, 196609, 1245195, 0, 196609, 1245196, 0, 196609, 1245197, 0, 196609, 1245198, 0, 196609, 1245199, 0, 196609, 1245200, 0, 196609, 1245201, 0, 196609, 1245202, 0, 196609, 1245203, 0, 196609, 1245204, 0, 196609, 1245205, 0, 196609, 1245206, 0, 196609, 1245207, 0, 196609, 1245208, 0, 196609, 1245209, 0, 196609, 1245210, 0, 196609, 1245211, 0, 196609, 1245212, 0, 196609, 1245213, 0, 196609, 1245214, 0, 196609, 1245215, 0, 196609, 1245216, 0, 196609, 1245217, 0, 196609, 1245218, 0, 196609, 1245219, 0, 196610, 1376255, 0, 196608, 1310720, 0, 196609, 1310721, 0, 196609, 1310722, 0, 196609, 1310723, 0, 196609, 1310724, 0, 196609, 1310725, 0, 196609, 1310726, 0, 196609, 1310727, 0, 196609, 1310728, 0, 196609, 1310729, 0, 196609, 1310730, 0, 196609, 1310731, 0, 196609, 1310732, 0, 196609, 1310733, 0, 196609, 1310734, 0, 196609, 1310735, 0, 196609, 1310736, 0, 196609, 1310737, 0, 196609, 1310738, 0, 196609, 1310739, 0, 196609, 1310740, 0, 196609, 1310741, 0, 196609, 1310742, 0, 196609, 1310743, 0, 196609, 1310744, 0, 196609, 1310745, 0, 196609, 1310746, 0, 196609, 1310747, 0, 196609, 1310748, 0, 196609, 1310749, 0, 196609, 1310750, 0, 196609, 1310751, 0, 196609, 1310752, 0, 196609, 1310753, 0, 196609, 1310754, 0, 196609, 1310755, 0, 196610, 1441791, 0, 196608, 1376256, 0, 196609, 1376257, 0, 196609, 1376258, 0, 196609, 1376259, 0, 196609, 1376260, 0, 196609, 1376261, 0, 196609, 1376262, 0, 196609, 1376263, 0, 196609, 1376264, 0, 196609, 1376265, 0, 196609, 1376266, 0, 196609, 1376267, 0, 196609, 1376268, 0, 196609, 1376269, 0, 196609, 1376270, 0, 196609, 1376271, 0, 196609, 1376272, 0, 196609, 1376273, 0, 196609, 1376274, 0, 196609, 1376275, 0, 196609, 1376276, 0, 196609, 1376277, 0, 196609, 1376278, 0, 196609, 1376279, 0, 196609, 1376280, 0, 196609, 1376281, 0, 196609, 1376282, 0, 196609, 1376283, 0, 196609, 1376284, 0, 196609, 1376285, 0, 196609, 1376286, 0, 196609, 1376287, 0, 196609, 1376288, 0, 196609, 1376289, 0, 196609, 1376290, 0, 196609, 1376291, 0, 196610, 1507327, 0, 196608, 1441792, 0, 196609, 1441793, 0, 196609, 1441794, 0, 196609, 1441795, 0, 196609, 1441796, 0, 196609, 1441797, 0, 196609, 1441798, 0, 196609, 1441799, 0, 196609, 1441800, 0, 196609, 1441801, 0, 196609, 1441802, 0, 196609, 1441803, 0, 196609, 1441804, 0, 196609, 1441805, 0, 196609, 1441806, 0, 196609, 1441807, 0, 196609, 1441808, 0, 196609, 1441809, 0, 196609, 1441810, 0, 196609, 1441811, 0, 196609, 1441812, 0, 196609, 1441813, 0, 196609, 1441814, 0, 196609, 1441815, 0, 196609, 1441816, 0, 196609, 1441817, 0, 196609, 1441818, 0, 196609, 1441819, 0, 196609, 1441820, 0, 196609, 1441821, 0, 196609, 1441822, 0, 196609, 1441823, 0, 196609, 1441824, 0, 196609, 1441825, 0, 196609, 1441826, 0, 196609, 1441827, 0, 196610, 1572863, 0, 196608, 1507328, 0, 196609, 1507329, 0, 196609, 1507330, 0, 196609, 1507331, 0, 196609, 1507332, 0, 196609, 1507333, 0, 196609, 1507334, 0, 196609, 1507335, 0, 196609, 1507336, 0, 196609, 1507337, 0, 196609, 1507338, 0, 196609, 1507339, 0, 196609, 1507340, 0, 196609, 1507341, 0, 196609, 1507342, 0, 196609, 1507343, 0, 196609, 1507344, 0, 196609, 1507345, 0, 196609, 1507346, 0, 196609, 1507347, 0, 196609, 1507348, 0, 196609, 1507349, 0, 196609, 1507350, 0, 196609, 1507351, 0, 196609, 1507352, 0, 196609, 1507353, 0, 196609, 1507354, 0, 196609, 1507355, 0, 196609, 1507356, 0, 196609, 1507357, 0, 196609, 1507358, 0, 196609, 1507359, 0, 196609, 1507360, 0, 196609, 1507361, 0, 196609, 1507362, 0, 196609, 1507363, 0, 196610, 1638399, 0, 196608, 1572864, 0, 196609, 1572865, 0, 196609, 1572866, 0, 196609, 1572867, 0, 196609, 1572868, 0, 196609, 1572869, 0, 196609, 1572870, 0, 196609, 1572871, 0, 196609, 1572872, 0, 196609, 1572873, 0, 196609, 1572874, 0, 196609, 1572875, 0, 196609, 1572876, 0, 196609, 1572877, 0, 196609, 1572878, 0, 196609, 1572879, 0, 196609, 1572880, 0, 196609, 1572881, 0, 196609, 1572882, 0, 196609, 1572883, 0, 196609, 1572884, 0, 196609, 1572885, 0, 196609, 1572886, 0, 196609, 1572887, 0, 196609, 1572888, 0, 196609, 1572889, 0, 196609, 1572890, 0, 196609, 1572891, 0, 196609, 1572892, 0, 196609, 1572893, 0, 196609, 1572894, 0, 196609, 1572895, 0, 196609, 1572896, 0, 196609, 1572897, 0, 196609, 1572898, 0, 196609, 1572899, 0, 196610, 1703935, 0, 196608, 1638400, 0, 196609, 1638401, 0, 196609, 1638402, 0, 196609, 1638403, 0, 196609, 1638404, 0, 196609, 1638405, 0, 196609, 1638406, 0, 196609, 1638407, 0, 196609, 1638408, 0, 196609, 1638409, 0, 196609, 1638410, 0, 196609, 1638411, 0, 196609, 1638412, 0, 196609, 1638413, 0, 196609, 1638414, 0, 196609, 1638415, 0, 196609, 1638416, 0, 196609, 1638417, 0, 196609, 1638418, 0, 196609, 1638419, 0, 196609, 1638420, 0, 196609, 1638421, 0, 196609, 1638422, 0, 196609, 1638423, 0, 196609, 1638424, 0, 196609, 1638425, 0, 196609, 1638426, 0, 196609, 1638427, 0, 196609, 1638428, 0, 196609, 1638429, 0, 196609, 1638430, 0, 196609, 1638431, 0, 196609, 1638432, 0, 196609, 1638433, 0, 196609, 1638434, 0, 196609, 1638435, 0, 196610, 1769471, 0, 262144, 1703936, 0, 262145, 1703937, 0, 262145, 1703938, 0, 262145, 1703939, 0, 262145, 1703940, 0, 262145, 1703941, 0, 262145, 1703942, 0, 262145, 1703943, 0, 262145, 1703944, 0, 262145, 1703945, 0, 262145, 1703946, 0, 262145, 1703947, 0, 262145, 1703948, 0, 262145, 1703949, 0, 262145, 1703950, 0, 262145, 1703951, 0, 262145, 1703952, 0, 262145, 1703953, 0, 262145, 1703954, 0, 262145, 1703955, 0, 262145, 1703956, 0, 262145, 1703957, 0, 262145, 1703958, 0, 262145, 1703959, 0, 262145, 1703960, 0, 262145, 1703961, 0, 262145, 1703962, 0, 262145, 1703963, 0, 262145, 1703964, 0, 262145, 1703965, 0, 262145, 1703966, 0, 262145, 1703967, 0, 262145, 1703968, 0, 262145, 1703969, 0, 262145, 1703970, 0, 262145, 1703971, 0, 262146 )

[node name="YSort" type="YSort" parent="."]
__meta__ = {
"_edit_lock_": true
}

[node name="House" parent="YSort" instance=ExtResource( 11 )]
position = Vector2( 273.759, 224.281 )

[node name="Bloomer" parent="YSort" instance=ExtResource( 4 )]
position = Vector2( 461.655, 407.288 )

[node name="LevelSwitch" type="Area2D" parent="YSort" groups=[
"level_switch",
]]
position = Vector2( 273.759, 209.73 )
collision_layer = 2
collision_mask = 2
script = ExtResource( 2 )
level_path = "res://scenes/levels/Level3.tscn"

[node name="enter_point" type="Position2D" parent="YSort/LevelSwitch"]
position = Vector2( 0, 24.8126 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="YSort/LevelSwitch"]
shape = SubResource( 1 )

[node name="LevelSwitch2" type="Area2D" parent="YSort" groups=[
"level_switch",
]]
position = Vector2( 688.039, -86.8291 )
collision_layer = 2
collision_mask = 2
script = ExtResource( 2 )
level_path = "res://scenes/levels/Level2.tscn"
door_id = 1

[node name="enter_point" type="Position2D" parent="YSort/LevelSwitch2"]
position = Vector2( 0, 28.3737 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="YSort/LevelSwitch2"]
position = Vector2( 0, 6.55145 )
shape = SubResource( 2 )

[node name="tree3" type="Sprite" parent="YSort"]
position = Vector2( -234.869, -171.584 )
texture = ExtResource( 10 )

[node name="Slime" parent="YSort" instance=ExtResource( 9 )]
position = Vector2( 502.382, 293.14 )
detect_dist = 100.0

[node name="Lightning" type="Light2D" parent="."]
position = Vector2( 112, -440 )
scale = Vector2( 19.327, 13.6432 )
texture = ExtResource( 7 )
energy = 0.0
shadow_gradient_length = 38.0
shadow_filter = 1
shadow_filter_smooth = 16.1
script = ExtResource( 8 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="Tween" type="Tween" parent="Lightning"]

[node name="Timer" type="Timer" parent="Lightning"]
wait_time = 5.0

[node name="CanvasModulate" type="CanvasModulate" parent="."]
color = Color( 0.305882, 0.545098, 0.627451, 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="CPUParticles2D" type="Particles2D" parent="CanvasLayer"]
position = Vector2( 385.065, 0 )
amount = 200
lifetime = 2.0
speed_scale = 8.0
visibility_rect = Rect2( -400, 0, 800, 500 )
process_material = SubResource( 4 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[connection signal="timeout" from="Lightning/Timer" to="Lightning" method="_on_timeout"]
